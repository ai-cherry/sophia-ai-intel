name: Qdrant Operations (Reusable)

on:
  workflow_call:
    inputs:
      action:
        required: true
        type: string
        description: "health|create|drop|list"
      payload:
        required: false
        type: string
        default: '{}'
        description: "Action payload JSON"
    secrets:
      QDRANT_URL:
        required: false
      QDRANT_API_KEY:
        required: false

jobs:
  qdrant-operation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Create proof directories
        run: |
          mkdir -p proofs/qdrant

      - name: Check configuration
        run: |
          echo "Action: ${{ inputs.action }}"
          echo "Payload: ${{ inputs.payload }}"
          
          if [ -z "${{ secrets.QDRANT_URL }}" ]; then
            echo '{"status": "failure", "query": "qdrant_'${{ inputs.action }}'", "results": [], "summary": {"text": "Qdrant not configured - QDRANT_URL missing", "confidence": 1.0, "model": "n/a", "sources": []}, "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)'", "execution_time_ms": 0, "errors": [{"provider": "qdrant", "code": "not-configured", "message": "QDRANT_URL secret not set - vector database operations unavailable"}]}' > proofs/qdrant/not_configured.json
            echo "❌ Qdrant not configured"
            exit 1
          fi

      - name: Qdrant operations
        run: |
          echo "🔍 Qdrant ${{ inputs.action }} operation"
          QDRANT_URL="${{ secrets.QDRANT_URL }}"
          QDRANT_API_KEY="${{ secrets.QDRANT_API_KEY }}"
          
          case "${{ inputs.action }}" in
            health)
              curl -X GET "$QDRANT_URL/collections" \
                ${QDRANT_API_KEY:+-H "api-key: $QDRANT_API_KEY"} \
                > proofs/qdrant/health.json 2>/dev/null || echo '{"error": "Qdrant health check failed"}' > proofs/qdrant/health.json
              ;;
            list)
              curl -X GET "$QDRANT_URL/collections" \
                ${QDRANT_API_KEY:+-H "api-key: $QDRANT_API_KEY"} \
                > proofs/qdrant/collections.json 2>/dev/null || echo '{"error": "Failed to list collections"}' > proofs/qdrant/collections.json
              ;;
            create)
              PAYLOAD='${{ inputs.payload }}'
              COLLECTION=$(echo "$PAYLOAD" | jq -r '.collection_name // "test_collection"')
              DIMENSION=$(echo "$PAYLOAD" | jq -r '.dimension // 384')
              
              curl -X PUT "$QDRANT_URL/collections/$COLLECTION" \
                ${QDRANT_API_KEY:+-H "api-key: $QDRANT_API_KEY"} \
                -H "Content-Type: application/json" \
                -d "{\"vectors\": {\"size\": $DIMENSION, \"distance\": \"Cosine\"}}" \
                > proofs/qdrant/create_$COLLECTION.json 2>/dev/null || echo '{"error": "Failed to create collection"}' > proofs/qdrant/create_$COLLECTION.json
              ;;
            drop)
              PAYLOAD='${{ inputs.payload }}'
              COLLECTION=$(echo "$PAYLOAD" | jq -r '.collection_name // "test_collection"')
              
              curl -X DELETE "$QDRANT_URL/collections/$COLLECTION" \
                ${QDRANT_API_KEY:+-H "api-key: $QDRANT_API_KEY"} \
                > proofs/qdrant/drop_$COLLECTION.json 2>/dev/null || echo '{"error": "Failed to drop collection"}' > proofs/qdrant/drop_$COLLECTION.json
              ;;
          esac

      - name: Commit proofs
        run: |
          git config user.name "sophia-bot"
          git config user.email "sophia-bot@users.noreply.github.com"
          git add proofs/qdrant/ 2>/dev/null || true
          git commit -m "[proof] qdrant/${{ inputs.action }}: operation completed" || true
          git push || true

      - name: Operation summary
        run: |
          echo "✅ Qdrant operation '${{ inputs.action }}' completed"
          echo "🗄️ Vector DB: Qdrant"
          echo "📊 Run ID: ${{ github.run_id }}"
          echo "📁 Proofs: proofs/qdrant/"