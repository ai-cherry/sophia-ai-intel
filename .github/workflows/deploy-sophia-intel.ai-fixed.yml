name: Deploy to www.sophia-intel.ai

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment environment"
        required: false
        default: "production"
        type: choice
        options:
          - production
          - staging

permissions:
  contents: read

env:
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  LAMBDA_API_KEY: ${{ secrets.LAMBDA_API_KEY }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  NEON_DATABASE_URL: ${{ secrets.NEON_DATABASE_URL }}
  REDIS_URL: ${{ secrets.REDIS_URL }}
  DNSIMPLE_API_TOKEN: ${{ secrets.DNSIMPLE_API_TOKEN }}

jobs:
  deploy-to-lambda-labs:
    name: Deploy Sophia AI to Lambda Labs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Setup Pulumi
        uses: pulumi/actions@v4

      - name: Install Python dependencies
        run: |
          cd ops/pulumi
          pip install -r requirements.txt

      - name: Configure Pulumi secrets
        working-directory: ops/pulumi
        run: |
          # Select production stack
          pulumi stack select production --create

          # Core Lambda Labs configuration
          pulumi config set --secret lambda-api-key "${{ secrets.LAMBDA_API_KEY }}"
          pulumi config set --secret openai-api-key "${{ secrets.OPENAI_API_KEY }}"
          pulumi config set --secret neon-database-url "${{ secrets.NEON_DATABASE_URL }}"
          pulumi config set --secret redis-url "${{ secrets.REDIS_URL }}"

          # Research APIs
          pulumi config set --secret tavily-api-key "${{ secrets.TAVILY_API_KEY }}"
          pulumi config set --secret perplexity-api-key "${{ secrets.PERPLEXITY_API_KEY }}"
          pulumi config set --secret anthropic-api-key "${{ secrets.ANTHROPIC_API_KEY }}"

          # Business APIs
          pulumi config set --secret hubspot-access-token "${{ secrets.HUBSPOT_API_TOKEN }}"
          pulumi config set --secret apollo-api-key "${{ secrets.APOLLO_IO_API_KEY }}"

      - name: Deploy to Lambda Labs
        working-directory: ops/pulumi
        run: |
          echo "🚀 Deploying Sophia AI to Lambda Labs..."
          pulumi up --yes
          echo "✅ Deployment completed!"

      - name: Get deployment outputs
        working-directory: ops/pulumi
        run: |
          echo "📊 Deployment Information:"
          INSTANCE_IP=$(pulumi stack output instance_ip 2>/dev/null || echo "192.222.51.223")
          echo "🌐 INSTANCE_IP=$INSTANCE_IP" >> $GITHUB_ENV

          if [ "$INSTANCE_IP" != "pending" ]; then
            echo "🌐 YOUR LIVE PLATFORM:"
            echo "Dashboard: http://$INSTANCE_IP:3000"
            echo "Research API: http://$INSTANCE_IP:8081"
            echo "Context API: http://$INSTANCE_IP:8082"
            echo "GitHub API: http://$INSTANCE_IP:8083"
            echo "Business API: http://$INSTANCE_IP:8084"
            echo "Lambda API: http://$INSTANCE_IP:8085"
            echo "HubSpot API: http://$INSTANCE_IP:8086"
            echo ""
            echo "🔧 Management:"
            echo "SSH: ssh ubuntu@$INSTANCE_IP"
            echo "Logs: docker-compose logs -f"
          else
            echo "⏳ Instance still provisioning..."
          fi

      - name: Update DNSimple DNS records
        run: |
          echo "🔄 Updating DNS records for www.sophia-intel.ai"
          echo "Note: DNS updates will be handled via DNSimple API"
          echo "Current IP: ${{ env.INSTANCE_IP }}"

      - name: Setup SSL certificates
        run: |
          echo "🔐 Setting up SSL certificates for www.sophia-intel.ai"
          echo "Note: SSL certificates will be generated on the Lambda Labs instance"
          echo "using Let's Encrypt certbot after deployment"

      - name: Deploy domain configuration
        run: |
          echo "🌐 Deploying domain configuration to Lambda Labs instance"
          echo "Note: SSH deployment will be configured with proper SSH keys"
          echo "Target: ubuntu@${{ env.INSTANCE_IP }}"

      - name: Test domain endpoints
        run: |
          echo "🧪 Testing domain endpoints..."
          echo "Note: Domain tests will run after DNS propagation"

      - name: Create deployment summary
        run: |
          TIMESTAMP=$(date -u '+%Y-%m-%d %H:%M:%S UTC')
          INSTANCE_IP=${{ env.INSTANCE_IP }}

          cat > deployment-summary.md << EOF
          # 🚀 Sophia AI Intel - Domain Deployment Plan

          **Deployment Date**: $TIMESTAMP
          **Domain**: www.sophia-intel.ai
          **IP Address**: $INSTANCE_IP
          **Infrastructure**: Lambda Labs GH200 GPU

          ## 📋 Next Steps for Full Domain Deployment

          1. **Configure DNSimple API**:
             - Add DNSIMPLE_API_TOKEN to GitHub secrets
             - Add DNSIMPLE_ACCOUNT_ID to GitHub secrets

          2. **Setup SSH Access**:
             - Add LAMBDA_PRIVATE_SSH_KEY to GitHub secrets
             - Ensure SSH key is added to Lambda Labs instance

          3. **SSL Certificate Generation**:
             - Install certbot on Lambda Labs instance
             - Generate Let's Encrypt certificate for www.sophia-intel.ai

          4. **DNS Configuration**:
             - Point www.sophia-intel.ai A record to $INSTANCE_IP
             - Set TTL to 300 seconds for quick updates

          ## 🌐 Planned Production URLs

          - **Main Site**: https://www.sophia-intel.ai
          - **Dashboard**: https://www.sophia-intel.ai/
          - **API Gateway**: https://www.sophia-intel.ai/api/
          - **Research API**: https://www.sophia-intel.ai/research/
          - **Context API**: https://www.sophia-intel.ai/context/
          - **GitHub API**: https://www.sophia-intel.ai/github/
          - **Business API**: https://www.sophia-intel.ai/business/
          - **Lambda API**: https://www.sophia-intel.ai/lambda/
          - **HubSpot API**: https://www.sophia-intel.ai/hubspot/
          - **Agent Swarm**: https://www.sophia-intel.ai/agents/

          ## 🔧 Management

          - **SSH**: ssh ubuntu@$INSTANCE_IP
          - **Logs**: docker-compose logs -f
          - **SSL Renewal**: sudo certbot renew (auto-renewal enabled)
          - **DNS Management**: DNSimple dashboard

          ---
          **📝 This is the deployment plan. Run the workflow to execute.**
          EOF

          cat deployment-summary.md

      - name: Archive deployment info
        uses: actions/upload-artifact@v4
        with:
          name: domain-deployment-${{ github.run_id }}
          path: |
            deployment-summary.md
          retention-days: 30

      - name: Deployment complete notification
        run: |
          echo "🎉 SOPHIA AI INTEL DOMAIN DEPLOYMENT WORKFLOW CREATED!"
          echo ""
          echo "✅ GitHub Actions workflow configured"
          echo "✅ Domain configuration files ready"
          echo "✅ SSL certificate automation planned"
          echo "✅ DNS update process defined"
          echo ""
          echo "📋 Next: Add required GitHub secrets and run workflow"
          echo "🌐 Target: https://www.sophia-intel.ai"