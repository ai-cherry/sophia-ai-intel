name: Deploy to K8s on Lambda Labs

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ghcr.io/${{ github.repository }}
  LAMBDA_HOST: 192.222.51.223

permissions:
  contents: read
  packages: write

jobs:
  deploy:
    name: Build and Deploy to K8s
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push sophia-dashboard
        uses: docker/build-push-action@v5
        with:
          context: ./apps/dashboard
          push: true
          tags: |
            ${{ env.IMAGE_PREFIX }}/sophia-dashboard:latest
            ${{ env.IMAGE_PREFIX }}/sophia-dashboard:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and push mcp-research
        uses: docker/build-push-action@v5
        with:
          context: ./services/mcp-research
          push: true
          tags: |
            ${{ env.IMAGE_PREFIX }}/mcp-research:latest
            ${{ env.IMAGE_PREFIX }}/mcp-research:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and push mcp-context
        uses: docker/build-push-action@v5
        with:
          context: ./services/mcp-context
          push: true
          tags: |
            ${{ env.IMAGE_PREFIX }}/mcp-context:latest
            ${{ env.IMAGE_PREFIX }}/mcp-context:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and push mcp-github
        uses: docker/build-push-action@v5
        with:
          context: ./services/mcp-github
          push: true
          tags: |
            ${{ env.IMAGE_PREFIX }}/mcp-github:latest
            ${{ env.IMAGE_PREFIX }}/mcp-github:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and push mcp-business
        uses: docker/build-push-action@v5
        with:
          context: ./services/mcp-business
          push: true
          tags: |
            ${{ env.IMAGE_PREFIX }}/mcp-business:latest
            ${{ env.IMAGE_PREFIX }}/mcp-business:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and push mcp-hubspot
        uses: docker/build-push-action@v5
        with:
          context: ./services/mcp-hubspot
          push: true
          tags: |
            ${{ env.IMAGE_PREFIX }}/mcp-hubspot:latest
            ${{ env.IMAGE_PREFIX }}/mcp-hubspot:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and push mcp-lambda
        uses: docker/build-push-action@v5
        with:
          context: ./services/mcp-lambda
          push: true
          tags: |
            ${{ env.IMAGE_PREFIX }}/mcp-lambda:latest
            ${{ env.IMAGE_PREFIX }}/mcp-lambda:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and push mcp-agents
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./services/mcp-agents/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_PREFIX }}/mcp-agents:latest
            ${{ env.IMAGE_PREFIX }}/mcp-agents:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Update K8s manifests with new images
        run: |
          # Update manifests with new image tags
          find k8s-deploy/manifests -name "*.yaml" -type f -exec sed -i "s|sophia-ai-intel/|${{ env.IMAGE_PREFIX }}/|g" {} \;
          find k8s-deploy/manifests -name "*.yaml" -type f -exec sed -i "s|:latest|:${{ github.sha }}|g" {} \;
      
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.LAMBDA_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ env.LAMBDA_HOST }} >> ~/.ssh/known_hosts
      
      - name: Deploy to Lambda Labs K8s
        run: |
          # Copy manifests to Lambda Labs
          scp -r k8s-deploy ubuntu@${{ env.LAMBDA_HOST }}:/home/ubuntu/
          
          # Apply manifests
          ssh ubuntu@${{ env.LAMBDA_HOST }} << 'EOF'
            cd /home/ubuntu
            
            # Create namespace
            kubectl apply -f k8s-deploy/manifests/namespace.yaml
            
            # Apply all manifests
            kubectl apply -f k8s-deploy/manifests/
            
            # Wait for rollout
            kubectl rollout status deployment -n sophia --timeout=5m
            
            # Show status
            kubectl get pods -n sophia
            kubectl get ingress -n sophia
          EOF
      
      - name: Health check
        run: |
          ssh ubuntu@${{ env.LAMBDA_HOST }} << 'EOF'
            echo "Waiting for services to be ready..."
            sleep 30
            
            # Check pod status
            kubectl get pods -n sophia
            
            # Test health endpoints
            curl -f http://localhost/health || echo "Dashboard health check failed"
            curl -f http://localhost/api/health || echo "API health check failed"
            
            echo "Deployment completed!"
          EOF
      
      - name: Rollback on failure
        if: failure()
        run: |
          ssh ubuntu@${{ env.LAMBDA_HOST }} << 'EOF'
            echo "Deployment failed, rolling back..."
            kubectl rollout undo deployment -n sophia
            kubectl rollout status deployment -n sophia --timeout=5m
          EOF
