# Sophia AI Local Development HTTPS Configuration
# Optimized for local development with SSL termination and service routing

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic Settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging Format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
                    
    access_log /var/log/nginx/access.log main;
    
    # Performance Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;
    
    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
        
    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    
    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Development CORS Headers
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;
    
    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA;
    ssl_prefer_server_ciphers off;
    ssl_dhparam /etc/ssl/certs/dhparam.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_stapling off; # Disabled for local development
    
    # Upstream Definitions for Sophia Services
    upstream agno_coordinator {
        server agno-coordinator:8080;
        keepalive 32;
    }
    
    upstream mcp_agents {
        server mcp-agents:8000;
        keepalive 32;
    }
    
    upstream mcp_context {
        server mcp-context:8081;
        keepalive 32;
    }
    
    upstream mcp_github {
        server mcp-github:8082;
        keepalive 32;
    }
    
    upstream mcp_hubspot {
        server mcp-hubspot:8083;
        keepalive 32;
    }
    
    upstream mcp_lambda {
        server mcp-lambda:8084;
        keepalive 32;
    }
    
    upstream mcp_research {
        server mcp-research:8085;
        keepalive 32;
    }
    
    upstream mcp_business {
        server mcp-business:8086;
        keepalive 32;
    }
    
    upstream agno_teams {
        server agno-teams:8087;
        keepalive 32;
    }
    
    upstream orchestrator {
        server orchestrator:8088;
        keepalive 32;
    }
    
    upstream agno_wrappers {
        server agno-wrappers:8089;
        keepalive 32;
    }
    
    upstream mcp_apollo {
        server mcp-apollo:8090;
        keepalive 32;
    }
    
    upstream mcp_gong {
        server mcp-gong:8091;
        keepalive 32;
    }
    
    upstream mcp_salesforce {
        server mcp-salesforce:8092;
        keepalive 32;
    }
    
    upstream mcp_slack {
        server mcp-slack:8093;
        keepalive 32;
    }
    
    upstream portkey_llm {
        server portkey-llm:8007;
        keepalive 32;
    }
    
    upstream agents_swarm {
        server agents-swarm:8008;
        keepalive 32;
    }
    
    upstream grafana {
        server grafana:3000;
        keepalive 32;
    }
    
    upstream prometheus {
        server prometheus:9090;
        keepalive 32;
    }
    
    upstream adminer {
        server adminer:8080;
        keepalive 32;
    }
    
    upstream redis_commander {
        server redis-commander:8081;
        keepalive 32;
    }
    
    upstream jaeger {
        server jaeger:16686;
        keepalive 32;
    }
    
    # HTTP to HTTPS Redirect
    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }
    
    # Main HTTPS Server Block
    server {
        listen 443 ssl http2;
        server_name sophia.local *.sophia.local localhost;
        
        # SSL Configuration
        ssl_certificate /etc/ssl/certs/sophia.crt;
        ssl_certificate_key /etc/ssl/certs/sophia.key;
        
        # Health Check Endpoint
        location /health {
            access_log off;
            return 200 "OK";
            add_header Content-Type text/plain;
        }
        
        # Main Dashboard/Frontend
        location / {
            proxy_pass http://agno_coordinator;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # WebSocket Support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # API Gateway Routes
        location /api/v1/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://orchestrator;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # MCP Services Routes
        location /mcp/agents/ {
            proxy_pass http://mcp_agents/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /mcp/context/ {
            proxy_pass http://mcp_context/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /mcp/github/ {
            proxy_pass http://mcp_github/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /mcp/hubspot/ {
            proxy_pass http://mcp_hubspot/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /mcp/lambda/ {
            proxy_pass http://mcp_lambda/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /mcp/research/ {
            proxy_pass http://mcp_research/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /mcp/business/ {
            proxy_pass http://mcp_business/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /mcp/apollo/ {
            proxy_pass http://mcp_apollo/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /mcp/gong/ {
            proxy_pass http://mcp_gong/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /mcp/salesforce/ {
            proxy_pass http://mcp_salesforce/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /mcp/slack/ {
            proxy_pass http://mcp_slack/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # AI Services Routes
        location /teams/ {
            proxy_pass http://agno_teams/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /wrappers/ {
            proxy_pass http://agno_wrappers/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /llm/ {
            proxy_pass http://portkey_llm/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /swarm/ {
            proxy_pass http://agents_swarm/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    # Monitoring Services
    server {
        listen 443 ssl http2;
        server_name grafana.sophia.local;
        
        ssl_certificate /etc/ssl/certs/sophia.crt;
        ssl_certificate_key /etc/ssl/certs/sophia.key;
        
        location / {
            proxy_pass http://grafana;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket Support for Grafana
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
    
    server {
        listen 443 ssl http2;
        server_name prometheus.sophia.local;
        
        ssl_certificate /etc/ssl/certs/sophia.crt;
        ssl_certificate_key /etc/ssl/certs/sophia.key;
        
        location / {
            proxy_pass http://prometheus;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    # Development Tools
    server {
        listen 443 ssl http2;
        server_name adminer.sophia.local;
        
        ssl_certificate /etc/ssl/certs/sophia.crt;
        ssl_certificate_key /etc/ssl/certs/sophia.key;
        
        location / {
            proxy_pass http://adminer;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    server {
        listen 443 ssl http2;
        server_name redis-commander.sophia.local;
        
        ssl_certificate /etc/ssl/certs/sophia.crt;
        ssl_certificate_key /etc/ssl/certs/sophia.key;
        
        location / {
            proxy_pass http://redis_commander;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    server {
        listen 443 ssl http2;
        server_name jaeger.sophia.local;
        
        ssl_certificate /etc/ssl/certs/sophia.crt;
        ssl_certificate_key /etc/ssl/certs/sophia.key;
        
        location / {
            proxy_pass http://jaeger;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    # Service-specific virtual hosts
    server {
        listen 443 ssl http2;
        server_name agno-coordinator.sophia.local;
        
        ssl_certificate /etc/ssl/certs/sophia.crt;
        ssl_certificate_key /etc/ssl/certs/sophia.key;
        
        location / {
            proxy_pass http://agno_coordinator;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    server {
        listen 443 ssl http2;
        server_name orchestrator.sophia.local;
        
        ssl_certificate /etc/ssl/certs/sophia.crt;
        ssl_certificate_key /etc/ssl/certs/sophia.key;
        
        location / {
            proxy_pass http://orchestrator;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    # Default catch-all server (returns 444 for unknown hosts)
    server {
        listen 443 ssl http2 default_server;
        server_name _;
        
        ssl_certificate /etc/ssl/certs/sophia.crt;
        ssl_certificate_key /etc/ssl/certs/sophia.key;
        
        return 444;
    }
}