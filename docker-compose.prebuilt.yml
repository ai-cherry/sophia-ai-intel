# Sophia AI Platform - Pre-built Images Deployment
# Uses existing Docker images for rapid local deployment

services:
  # Infrastructure Services
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=sophia
      - POSTGRES_USER=sophia
      - POSTGRES_PASSWORD=sophia_dev_password_123
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - sophia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sophia -d sophia"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6380:6379"
    volumes:
      - redis-data:/data
    networks:
      - sophia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant-data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    networks:
      - sophia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/readyz"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Core AI Services (using pre-built images)
  sophia-ai-core:
    image: sophia-registry/sophia-ai-core:latest
    container_name: sophia-ai-core
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_URL=postgresql://sophia:sophia_dev_password_123@postgres:5432/sophia
      - REDIS_URL=redis://redis:6379
      - QDRANT_URL=http://qdrant:6333
    depends_on:
      - postgres
      - redis
      - qdrant
    networks:
      - sophia-network
    restart: unless-stopped

  sophia-business-intel:
    image: sophia-registry/sophia-business-intel:latest
    container_name: sophia-business-intel
    ports:
      - "8086:8080"
    environment:
      - POSTGRES_URL=postgresql://sophia:sophia_dev_password_123@postgres:5432/sophia
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - sophia-network
    restart: unless-stopped

  sophia-communications:
    image: sophia-registry/sophia-communications:latest
    container_name: sophia-communications
    ports:
      - "8087:8080"
    environment:
      - POSTGRES_URL=postgresql://sophia:sophia_dev_password_123@postgres:5432/sophia
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - sophia-network
    restart: unless-stopped

  sophia-orchestration:
    image: sophia-registry/sophia-orchestration:latest
    container_name: sophia-orchestration
    ports:
      - "8088:8080"
    environment:
      - POSTGRES_URL=postgresql://sophia:sophia_dev_password_123@postgres:5432/sophia
      - REDIS_URL=redis://redis:6379
      - QDRANT_URL=http://qdrant:6333
    depends_on:
      - postgres
      - redis
      - qdrant
      - sophia-ai-core
    networks:
      - sophia-network
    restart: unless-stopped

  sophia-development:
    image: sophia-registry/sophia-development:latest
    container_name: sophia-development
    ports:
      - "8089:8080"
    environment:
      - POSTGRES_URL=postgresql://sophia:sophia_dev_password_123@postgres:5432/sophia
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - sophia-network
    restart: unless-stopped

  sophia-infrastructure:
    image: sophia-registry/sophia-infrastructure:latest
    container_name: sophia-infrastructure
    ports:
      - "8090:8080"
    environment:
      - POSTGRES_URL=postgresql://sophia:sophia_dev_password_123@postgres:5432/sophia
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - sophia-network
    restart: unless-stopped

  # Dashboard
  sophia-dashboard:
    image: sophia-dashboard:latest
    container_name: sophia-dashboard
    ports:
      - "3001:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8088
      - API_BASE_URL=http://sophia-orchestration:8080
    depends_on:
      - sophia-orchestration
    networks:
      - sophia-network
    restart: unless-stopped

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - sophia-network
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - sophia-network
    restart: unless-stopped
    depends_on:
      - prometheus

  # Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf.local:/etc/nginx/nginx.conf:ro
    networks:
      - sophia-network
    restart: unless-stopped
    depends_on:
      - sophia-dashboard
      - sophia-orchestration
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
  redis-data:
  qdrant-data:
  prometheus-data:
  grafana-data:

networks:
  sophia-network:
    driver: bridge