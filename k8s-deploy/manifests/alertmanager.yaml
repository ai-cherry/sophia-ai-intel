apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: monitoring
data:
  alertmanager.yml: |
    global:
      smtp_smarthost: 'smtp.gmail.com:587'
      smtp_from: 'alerts@sophia-intel.ai'
      smtp_auth_username: '${SMTP_USERNAME}'
      smtp_auth_password: '${SMTP_PASSWORD}'

    route:
      group_by: ['alertname', 'service']
      group_wait: 30s
      group_interval: 30s
      repeat_interval: 1h
      receiver: 'sophia-team'
      routes:
      - match:
          severity: critical
        receiver: 'sophia-critical'
        continue: true
      - match:
          severity: warning
        receiver: 'sophia-team'
        continue: true
      - match:
          service: gpu
        receiver: 'gpu-team'
      - match:
          service: ai-model
        receiver: 'ml-team'

    receivers:
    - name: 'sophia-team'
      email_configs:
      - to: 'team@sophia-intel.ai'
        subject: '[SOPHIA] {{ .GroupLabels.alertname }} ({{ .CommonLabels.severity }})'
        body: |
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          Severity: {{ .Labels.severity }}
          Instance: {{ .Labels.instance }}
          Value: {{ .Value }}
          {{ if .Annotations.runbook_url }}Runbook: {{ .Annotations.runbook_url }}{{ end }}
          {{ end }}
      slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#sophia-alerts'
        title: '{{ .GroupLabels.alertname }} ({{ .CommonLabels.severity }})'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Service:* {{ .Labels.service }}
          *Severity:* {{ .Labels.severity }}
          *Instance:* {{ .Labels.instance }}
          {{ if .Annotations.runbook_url }}*Runbook:* {{ .Annotations.runbook_url }}{{ end }}
          {{ end }}
      webhook_configs:
      - url: '${WEBHOOK_URL}'
        http_config:
          basic_auth:
            username: '${WEBHOOK_USERNAME}'
            password: '${WEBHOOK_PASSWORD}'

    - name: 'sophia-critical'
      email_configs:
      - to: 'critical@sophia-intel.ai'
        subject: '[CRITICAL] {{ .GroupLabels.alertname }} - IMMEDIATE ACTION REQUIRED'
        body: |
          ðŸš¨ CRITICAL ALERT - IMMEDIATE ATTENTION REQUIRED ðŸš¨

          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          Instance: {{ .Labels.instance }}
          Value: {{ .Value }}
          {{ if .Annotations.runbook_url }}Runbook: {{ .Annotations.runbook_url }}{{ end }}
          {{ end }}
      slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#sophia-critical'
        title: 'ðŸš¨ CRITICAL: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *ðŸš¨ CRITICAL ALERT*
          *Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Service:* {{ .Labels.service }}
          *Instance:* {{ .Labels.instance }}
          *Value:* {{ .Value }}
          {{ if .Annotations.runbook_url }}*Runbook:* {{ .Annotations.runbook_url }}{{ end }}
          {{ end }}

    - name: 'gpu-team'
      slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#gpu-monitoring'
        title: 'GPU Alert: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *GPU Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Instance:* {{ .Labels.instance }}
          *Severity:* {{ .Labels.severity }}
          {{ end }}

    - name: 'ml-team'
      slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#ml-monitoring'
        title: 'ML Model Alert: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *ML Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Model:* {{ .Labels.model }}
          *Severity:* {{ .Labels.severity }}
          {{ end }}

    - name: 'sonic-ai-team'
      slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#sonic-ai-monitoring'
        title: 'Sonic AI Alert: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *Sonic AI Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Service:* {{ .Labels.service }}
          *Severity:* {{ .Labels.severity }}
          *Value:* {{ .Value }}
          {{ if .Annotations.runbook_url }}*Runbook:* {{ .Annotations.runbook_url }}{{ end }}
          {{ end }}
      email_configs:
      - to: 'sonic-ai@sophia-intel.ai'
        subject: '[Sonic AI] {{ .GroupLabels.alertname }} ({{ .CommonLabels.severity }})'
        body: |
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          Severity: {{ .Labels.severity }}
          Value: {{ .Value }}
          {{ if .Annotations.runbook_url }}Runbook: {{ .Annotations.runbook_url }}{{ end }}
          {{ end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
  namespace: monitoring
  labels:
    app: alertmanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      labels:
        app: alertmanager
    spec:
      containers:
      - name: alertmanager
        image: prom/alertmanager:latest
        ports:
        - containerPort: 9093
          name: http
        volumeMounts:
        - name: config
          mountPath: /etc/alertmanager
        - name: storage
          mountPath: /alertmanager
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9093
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9093
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: config
        configMap:
          name: alertmanager-config
      - name: storage
        persistentVolumeClaim:
          claimName: alertmanager-storage
---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  namespace: monitoring
  labels:
    app: alertmanager
spec:
  selector:
    app: alertmanager
  ports:
  - port: 9093
    targetPort: 9093
    name: http
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: alertmanager-storage
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-secrets
  namespace: monitoring
type: Opaque
data:
  # These need to be populated with actual values
  SMTP_USERNAME: <base64-encoded-smtp-username>
  SMTP_PASSWORD: <base64-encoded-smtp-password>
  SLACK_WEBHOOK_URL: <base64-encoded-slack-webhook-url>
  WEBHOOK_URL: <base64-encoded-webhook-url>
  WEBHOOK_USERNAME: <base64-encoded-webhook-username>
  WEBHOOK_PASSWORD: <base64-encoded-webhook-password>