apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-context
  namespace: sophia
  labels:
    app: mcp-context
    component: backend
    service: context
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mcp-context
  template:
    metadata:
      labels:
        app: mcp-context
        component: backend
        service: context
    spec:
      containers:
      - name: mcp-context
        image: localhost:5000/sophia-context:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: PORT
          value: "8080"
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: TENANT
          value: "pay-ready"
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: sophia-llm-secrets
              key: OPENAI_API_KEY
        - name: NEON_DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: sophia-database-secrets
              key: NEON_DATABASE_URL
        - name: QDRANT_URL
          valueFrom:
            secretKeyRef:
              name: sophia-vector-secrets
              key: QDRANT_URL
        - name: QDRANT_API_KEY
          valueFrom:
            secretKeyRef:
              name: sophia-vector-secrets
              key: QDRANT_API_KEY
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: sophia-redis-secrets
              key: REDIS_URL
        resources:
          limits:
            cpu: 1
            memory: "2Gi"
          requests:
            cpu: 500m
            memory: "1Gi"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
        volumeMounts:
        - name: context-storage
          mountPath: /data
      volumes:
      - name: context-storage
        persistentVolumeClaim:
          claimName: mcp-context-storage
---
apiVersion: v1
kind: Service
metadata:
  name: mcp-context
  namespace: sophia
  labels:
    app: mcp-context
    component: backend
    service: context
spec:
  type: ClusterIP
  selector:
    app: mcp-context
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
