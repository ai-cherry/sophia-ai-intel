apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonic-ai
  namespace: sophia
  labels:
    app: sonic-ai
    component: reasoning-engine
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sonic-ai
  template:
    metadata:
      labels:
        app: sonic-ai
        component: reasoning-engine
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: sonic-ai
        image: ghcr.io/ai-cherry/sophia-sonic-ai:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: DASHBOARD_ORIGIN
          value: "http://sophia-dashboard:3000"
        - name: GITHUB_MCP_URL
          value: "http://sophia-github:8080"
        - name: CONTEXT_MCP_URL
          value: "http://sophia-context:8080"
        - name: RESEARCH_MCP_URL
          value: "http://sophia-research:8080"
        - name: BUSINESS_MCP_URL
          value: "http://sophia-business:8080"
        - name: AGENTS_MCP_URL
          value: "http://sophia-agents:8080"
        - name: SONIC_MODEL_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: sophia-secrets
              key: SONIC_MODEL_ENDPOINT
        - name: SONIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: sophia-secrets
              key: SONIC_API_KEY
        - name: OPENROUTER_API_KEY
          valueFrom:
            secretKeyRef:
              name: sophia-secrets
              key: OPENROUTER_API_KEY
        - name: MAX_CONCURRENT_REQUESTS
          value: "10"
        - name: REASONING_TIMEOUT_MS
          value: "5000"
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: LOG_LEVEL
          value: "INFO"
        resources:
          requests:
            cpu: 4
            memory: "8Gi"
            nvidia.com/gpu: 1
          limits:
            cpu: 8
            memory: "16Gi"
            nvidia.com/gpu: 1
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: sonic-storage
          mountPath: /data
        - name: cache-volume
          mountPath: /cache
      volumes:
      - name: sonic-storage
        persistentVolumeClaim:
          claimName: sonic-ai-storage
      - name: cache-volume
        emptyDir:
          sizeLimit: 2Gi
      imagePullSecrets:
      - name: github-registry
      tolerations:
      - key: "nvidia.com/gpu"
        operator: "Exists"
        effect: "NoSchedule"
      nodeSelector:
        accelerator: nvidia-tesla-h100
---
apiVersion: v1
kind: Service
metadata:
  name: sonic-ai
  namespace: sophia
  labels:
    app: sonic-ai
    component: reasoning-engine
spec:
  selector:
    app: sonic-ai
  ports:
    - port: 8080
      targetPort: 8080
      name: http
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonic-ai-storage
  namespace: sophia
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: local-storage
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: sonic-ai-hpa
  namespace: sophia
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sonic-ai
  minReplicas: 2
  maxReplicas: 6
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: External
    external:
      metric:
        name: sonic_ai_requests_per_second
      target:
        type: AverageValue
        averageValue: "50"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 25
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      selectPolicy: Max
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: sonic-ai-pdb
  namespace: sophia
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: sonic-ai