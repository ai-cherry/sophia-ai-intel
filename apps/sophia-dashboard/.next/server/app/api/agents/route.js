"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/agents/route";
exports.ids = ["app/api/agents/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fagents%2Froute&page=%2Fapi%2Fagents%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fagents%2Froute.ts&appDir=%2FUsers%2Flynnmusil%2Fsophia-ai-intel-1%2Fapps%2Fsophia-dashboard%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Flynnmusil%2Fsophia-ai-intel-1%2Fapps%2Fsophia-dashboard&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fagents%2Froute&page=%2Fapi%2Fagents%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fagents%2Froute.ts&appDir=%2FUsers%2Flynnmusil%2Fsophia-ai-intel-1%2Fapps%2Fsophia-dashboard%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Flynnmusil%2Fsophia-ai-intel-1%2Fapps%2Fsophia-dashboard&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/../../node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/../../node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/../../node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_lynnmusil_sophia_ai_intel_1_apps_sophia_dashboard_src_app_api_agents_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/agents/route.ts */ \"(rsc)/./src/app/api/agents/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/agents/route\",\n        pathname: \"/api/agents\",\n        filename: \"route\",\n        bundlePath: \"app/api/agents/route\"\n    },\n    resolvedPagePath: \"/Users/lynnmusil/sophia-ai-intel-1/apps/sophia-dashboard/src/app/api/agents/route.ts\",\n    nextConfigOutput,\n    userland: _Users_lynnmusil_sophia_ai_intel_1_apps_sophia_dashboard_src_app_api_agents_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/agents/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1hcHAtbG9hZGVyLmpzP25hbWU9YXBwJTJGYXBpJTJGYWdlbnRzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZhZ2VudHMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZhZ2VudHMlMkZyb3V0ZS50cyZhcHBEaXI9JTJGVXNlcnMlMkZseW5ubXVzaWwlMkZzb3BoaWEtYWktaW50ZWwtMSUyRmFwcHMlMkZzb3BoaWEtZGFzaGJvYXJkJTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRmx5bm5tdXNpbCUyRnNvcGhpYS1haS1pbnRlbC0xJTJGYXBwcyUyRnNvcGhpYS1kYXNoYm9hcmQmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9c3RhbmRhbG9uZSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNvQztBQUNqSDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL3NvcGhpYS1kYXNoYm9hcmQvPzFlZDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL2x5bm5tdXNpbC9zb3BoaWEtYWktaW50ZWwtMS9hcHBzL3NvcGhpYS1kYXNoYm9hcmQvc3JjL2FwcC9hcGkvYWdlbnRzL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcInN0YW5kYWxvbmVcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYWdlbnRzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYWdlbnRzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9hZ2VudHMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvbHlubm11c2lsL3NvcGhpYS1haS1pbnRlbC0xL2FwcHMvc29waGlhLWRhc2hib2FyZC9zcmMvYXBwL2FwaS9hZ2VudHMvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2FnZW50cy9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fagents%2Froute&page=%2Fapi%2Fagents%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fagents%2Froute.ts&appDir=%2FUsers%2Flynnmusil%2Fsophia-ai-intel-1%2Fapps%2Fsophia-dashboard%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Flynnmusil%2Fsophia-ai-intel-1%2Fapps%2Fsophia-dashboard&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/agents/route.ts":
/*!*************************************!*\
  !*** ./src/app/api/agents/route.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/../../node_modules/next/dist/api/server.js\");\n\n// Map agent types to swarm types\nconst agentToSwarmTypeMap = {\n    \"Research Agent\": \"research\",\n    \"Code Agent\": \"coding\",\n    \"Analysis Agent\": \"analysis\",\n    \"Planning Agent\": \"planning\"\n};\nasync function POST(request) {\n    try {\n        const { action, agentType, task } = await request.json();\n        if (action === \"deploy\") {\n            // Convert agent type to swarm type\n            const swarmType = agentToSwarmTypeMap[agentType] || \"research\";\n            // Actually create a swarm using the unified swarm service\n            try {\n                const swarmResponse = await fetch(\"http://localhost:8100/swarms/create\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        swarm_type: swarmType,\n                        task: task || `Execute ${agentType} operations`,\n                        context: {\n                            source: \"dashboard\",\n                            agentType: agentType,\n                            timestamp: new Date().toISOString()\n                        }\n                    })\n                });\n                if (swarmResponse.ok) {\n                    const swarmData = await swarmResponse.json();\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        success: true,\n                        agentId: swarmData.swarm_id,\n                        agentType,\n                        status: \"deployed\",\n                        message: `${agentType} deployed successfully! Swarm ID: ${swarmData.swarm_id}`,\n                        task,\n                        swarmId: swarmData.swarm_id,\n                        swarmType: swarmType,\n                        viewUrl: `/swarms/${swarmData.swarm_id}`\n                    });\n                }\n            } catch (error) {\n                console.error(\"Failed to create swarm:\", error);\n            }\n            // Fallback to mock if swarm service is unavailable\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                agentId: `agent-${Date.now()}`,\n                agentType,\n                status: \"deployed\",\n                message: `${agentType} deployed (mock mode)`,\n                task\n            });\n        }\n        if (action === \"list\") {\n            // Get real swarms from the unified service\n            try {\n                const swarmsResponse = await fetch(\"http://localhost:8100/swarms\");\n                if (swarmsResponse.ok) {\n                    const swarms = await swarmsResponse.json();\n                    // Transform swarms to agent format\n                    const agents = swarms.map((swarm)=>({\n                            id: swarm.swarm_id,\n                            type: swarm.swarm_type,\n                            status: swarm.status,\n                            progress: swarm.progress,\n                            task: swarm.current_task,\n                            lastActive: new Date().toISOString()\n                        }));\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        agents\n                    });\n                }\n            } catch (error) {\n                console.error(\"Failed to list swarms:\", error);\n            }\n            // Fallback to mock agents\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                agents: [\n                    {\n                        id: \"agent-1\",\n                        type: \"Research Agent\",\n                        status: \"idle\",\n                        lastActive: new Date().toISOString()\n                    },\n                    {\n                        id: \"agent-2\",\n                        type: \"Code Agent\",\n                        status: \"idle\",\n                        lastActive: new Date().toISOString()\n                    }\n                ]\n            });\n        }\n        if (action === \"status\") {\n            const { swarmId } = await request.json();\n            try {\n                const statusResponse = await fetch(`http://localhost:8100/swarms/${swarmId}/status`);\n                if (statusResponse.ok) {\n                    const status = await statusResponse.json();\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(status);\n                }\n            } catch (error) {\n                console.error(\"Failed to get swarm status:\", error);\n            }\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Swarm not found\"\n            }, {\n                status: 404\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Invalid action\"\n        }, {\n            status: 400\n        });\n    } catch (error) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to process agent request\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function GET(request) {\n    const { searchParams } = new URL(request.url);\n    const action = searchParams.get(\"action\");\n    // Handle activity feed request\n    if (action === \"activity\") {\n        try {\n            // Get recent activities from WebSocket hub or swarm service\n            const activities = [];\n            // Try to get swarm activities\n            try {\n                const swarmsResponse = await fetch(\"http://localhost:8100/swarms\");\n                if (swarmsResponse.ok) {\n                    const swarms = await swarmsResponse.json();\n                    swarms.forEach((swarm)=>{\n                        activities.push({\n                            id: `swarm-${swarm.swarm_id}`,\n                            timestamp: new Date().toISOString(),\n                            type: \"agent\",\n                            agent_id: swarm.swarm_id,\n                            agent_type: swarm.swarm_type,\n                            action: swarm.current_task || \"Processing\",\n                            status: swarm.status,\n                            progress: swarm.progress\n                        });\n                    });\n                }\n            } catch (error) {\n                console.error(\"Failed to get swarm activities:\", error);\n            }\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                activities\n            });\n        } catch (error) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                activities: []\n            });\n        }\n    }\n    // Default: Get available agents from the unified swarm service\n    try {\n        const agentsResponse = await fetch(\"http://localhost:8100/agents\");\n        if (agentsResponse.ok) {\n            const agents = await agentsResponse.json();\n            // Group by type and return in dashboard format\n            const agentTypes = new Map();\n            agents.forEach((agent)=>{\n                if (!agentTypes.has(agent.type)) {\n                    agentTypes.set(agent.type, {\n                        type: agent.name,\n                        icon: getIconForType(agent.type),\n                        description: agent.capabilities.join(\", \"),\n                        capabilities: agent.capabilities\n                    });\n                }\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                availableAgents: Array.from(agentTypes.values())\n            });\n        }\n    } catch (error) {\n        console.error(\"Failed to get available agents:\", error);\n    }\n    // Fallback to default agents\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        availableAgents: [\n            {\n                type: \"Research Agent\",\n                icon: \"\\uD83D\\uDD0D\",\n                description: \"Autonomous web research and data gathering\",\n                capabilities: [\n                    \"Web search\",\n                    \"Data extraction\",\n                    \"Report generation\"\n                ]\n            },\n            {\n                type: \"Code Agent\",\n                icon: \"\\uD83D\\uDCBB\",\n                description: \"Automated code generation and debugging\",\n                capabilities: [\n                    \"Code generation\",\n                    \"Bug fixing\",\n                    \"Code review\"\n                ]\n            },\n            {\n                type: \"Analysis Agent\",\n                icon: \"\\uD83D\\uDCCA\",\n                description: \"Data analysis and insights generation\",\n                capabilities: [\n                    \"Data processing\",\n                    \"Statistical analysis\",\n                    \"Visualization\"\n                ]\n            },\n            {\n                type: \"Planning Agent\",\n                icon: \"\\uD83D\\uDCCB\",\n                description: \"Strategic planning with multiple perspectives\",\n                capabilities: [\n                    \"Cutting-edge solutions\",\n                    \"Conservative approaches\",\n                    \"Synthesis\"\n                ]\n            }\n        ]\n    });\n}\nfunction getIconForType(type) {\n    const iconMap = {\n        \"orchestrator\": \"\\uD83C\\uDFAF\",\n        \"developer\": \"\\uD83D\\uDCBB\",\n        \"researcher\": \"\\uD83D\\uDD0D\",\n        \"analyzer\": \"\\uD83D\\uDCCA\",\n        \"planner\": \"\\uD83D\\uDCCB\",\n        \"quality\": \"✅\",\n        \"infrastructure\": \"\\uD83D\\uDD27\",\n        \"mediator\": \"\\uD83E\\uDD1D\"\n    };\n    return iconMap[type] || \"\\uD83E\\uDD16\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/agents/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fagents%2Froute&page=%2Fapi%2Fagents%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fagents%2Froute.ts&appDir=%2FUsers%2Flynnmusil%2Fsophia-ai-intel-1%2Fapps%2Fsophia-dashboard%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Flynnmusil%2Fsophia-ai-intel-1%2Fapps%2Fsophia-dashboard&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();