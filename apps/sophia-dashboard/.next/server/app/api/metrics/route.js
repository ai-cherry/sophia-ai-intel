"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/metrics/route";
exports.ids = ["app/api/metrics/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmetrics%2Froute&page=%2Fapi%2Fmetrics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmetrics%2Froute.ts&appDir=%2FUsers%2Flynnmusil%2Fsophia-ai-intel-1%2Fapps%2Fsophia-dashboard%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Flynnmusil%2Fsophia-ai-intel-1%2Fapps%2Fsophia-dashboard&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmetrics%2Froute&page=%2Fapi%2Fmetrics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmetrics%2Froute.ts&appDir=%2FUsers%2Flynnmusil%2Fsophia-ai-intel-1%2Fapps%2Fsophia-dashboard%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Flynnmusil%2Fsophia-ai-intel-1%2Fapps%2Fsophia-dashboard&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/../../node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/../../node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/../../node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_lynnmusil_sophia_ai_intel_1_apps_sophia_dashboard_src_app_api_metrics_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/metrics/route.ts */ \"(rsc)/./src/app/api/metrics/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/metrics/route\",\n        pathname: \"/api/metrics\",\n        filename: \"route\",\n        bundlePath: \"app/api/metrics/route\"\n    },\n    resolvedPagePath: \"/Users/lynnmusil/sophia-ai-intel-1/apps/sophia-dashboard/src/app/api/metrics/route.ts\",\n    nextConfigOutput,\n    userland: _Users_lynnmusil_sophia_ai_intel_1_apps_sophia_dashboard_src_app_api_metrics_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/metrics/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1hcHAtbG9hZGVyLmpzP25hbWU9YXBwJTJGYXBpJTJGbWV0cmljcyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGbWV0cmljcyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRm1ldHJpY3MlMkZyb3V0ZS50cyZhcHBEaXI9JTJGVXNlcnMlMkZseW5ubXVzaWwlMkZzb3BoaWEtYWktaW50ZWwtMSUyRmFwcHMlMkZzb3BoaWEtZGFzaGJvYXJkJTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRmx5bm5tdXNpbCUyRnNvcGhpYS1haS1pbnRlbC0xJTJGYXBwcyUyRnNvcGhpYS1kYXNoYm9hcmQmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9c3RhbmRhbG9uZSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNxQztBQUNsSDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL3NvcGhpYS1kYXNoYm9hcmQvPzZiM2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL2x5bm5tdXNpbC9zb3BoaWEtYWktaW50ZWwtMS9hcHBzL3NvcGhpYS1kYXNoYm9hcmQvc3JjL2FwcC9hcGkvbWV0cmljcy9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJzdGFuZGFsb25lXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL21ldHJpY3Mvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9tZXRyaWNzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9tZXRyaWNzL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL2x5bm5tdXNpbC9zb3BoaWEtYWktaW50ZWwtMS9hcHBzL3NvcGhpYS1kYXNoYm9hcmQvc3JjL2FwcC9hcGkvbWV0cmljcy9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvbWV0cmljcy9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmetrics%2Froute&page=%2Fapi%2Fmetrics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmetrics%2Froute.ts&appDir=%2FUsers%2Flynnmusil%2Fsophia-ai-intel-1%2Fapps%2Fsophia-dashboard%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Flynnmusil%2Fsophia-ai-intel-1%2Fapps%2Fsophia-dashboard&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/metrics/route.ts":
/*!**************************************!*\
  !*** ./src/app/api/metrics/route.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/../../node_modules/next/dist/api/server.js\");\n\n// Prometheus endpoint (configurable via env or fallback to local)\nconst PROMETHEUS_URL = process.env.PROMETHEUS_URL || \"http://localhost:9090\";\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const { query, start, end, step, time } = body;\n        if (!query) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Query parameter is required\"\n            }, {\n                status: 400\n            });\n        }\n        // Determine query type and build URL\n        let url;\n        const params = new URLSearchParams();\n        params.append(\"query\", query);\n        if (start && end) {\n            // Range query\n            url = `${PROMETHEUS_URL}/api/v1/query_range`;\n            params.append(\"start\", start);\n            params.append(\"end\", end);\n            if (step) params.append(\"step\", step);\n        } else {\n            // Instant query\n            url = `${PROMETHEUS_URL}/api/v1/query`;\n            if (time) params.append(\"time\", time);\n        }\n        // Execute Prometheus query\n        const response = await fetch(`${url}?${params.toString()}`, {\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            signal: AbortSignal.timeout(10000)\n        });\n        if (!response.ok) {\n            throw new Error(`Prometheus returned ${response.status}: ${response.statusText}`);\n        }\n        const data = await response.json();\n        if (data.status === \"error\") {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: data.error || \"Query failed\",\n                errorType: data.errorType\n            }, {\n                status: 400\n            });\n        }\n        // Transform and return results\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            status: \"success\",\n            resultType: data.data?.resultType,\n            results: data.data?.result || []\n        });\n    } catch (error) {\n        console.error(\"Prometheus query error:\", error);\n        // If Prometheus is unavailable, return fallback metrics\n        if (error instanceof Error && (error.message.includes(\"ECONNREFUSED\") || error.message.includes(\"fetch failed\"))) {\n            const body = await request.json().catch(()=>({\n                    query: \"\"\n                }));\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                status: \"fallback\",\n                message: \"Prometheus unavailable, returning simulated metrics\",\n                results: generateFallbackMetrics(body.query || \"\")\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: error instanceof Error ? error.message : \"Failed to query Prometheus\",\n            status: \"error\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const target = searchParams.get(\"target\");\n        if (target === \"health\") {\n            // Check Prometheus health\n            const response = await fetch(`${PROMETHEUS_URL}/-/healthy`, {\n                signal: AbortSignal.timeout(5000)\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                status: response.ok ? \"healthy\" : \"unhealthy\",\n                prometheus_url: PROMETHEUS_URL,\n                timestamp: new Date().toISOString()\n            });\n        }\n        if (target === \"targets\") {\n            // Get scrape targets\n            const response = await fetch(`${PROMETHEUS_URL}/api/v1/targets`, {\n                headers: {\n                    \"Accept\": \"application/json\"\n                },\n                signal: AbortSignal.timeout(5000)\n            });\n            if (!response.ok) {\n                throw new Error(`Failed to fetch targets: ${response.statusText}`);\n            }\n            const data = await response.json();\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                status: \"success\",\n                targets: data.data?.activeTargets || [],\n                summary: {\n                    total: data.data?.activeTargets.length || 0,\n                    up: data.data?.activeTargets.filter((t)=>t.health === \"up\").length || 0,\n                    down: data.data?.activeTargets.filter((t)=>t.health === \"down\").length || 0\n                }\n            });\n        }\n        // Default: return available metrics\n        const response = await fetch(`${PROMETHEUS_URL}/api/v1/label/__name__/values`, {\n            headers: {\n                \"Accept\": \"application/json\"\n            },\n            signal: AbortSignal.timeout(5000)\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to fetch metrics: ${response.statusText}`);\n        }\n        const data = await response.json();\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            status: \"success\",\n            metrics: data.data || [],\n            total: data.data?.length || 0,\n            prometheus_url: PROMETHEUS_URL\n        });\n    } catch (error) {\n        console.error(\"Prometheus GET error:\", error);\n        // Return fallback response\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            status: \"fallback\",\n            message: \"Prometheus unavailable\",\n            metrics: [\n                \"up\",\n                \"http_requests_total\",\n                \"http_request_duration_seconds\",\n                \"process_cpu_seconds_total\",\n                \"process_resident_memory_bytes\",\n                \"nodejs_heap_size_total_bytes\",\n                \"swarm_tasks_total\",\n                \"swarm_active_agents\",\n                \"llm_tokens_used_total\",\n                \"llm_request_duration_seconds\"\n            ],\n            prometheus_url: PROMETHEUS_URL\n        });\n    }\n}\nfunction generateFallbackMetrics(query) {\n    const now = Date.now() / 1000;\n    // Generate realistic-looking fallback data based on query\n    if (query.includes(\"up\")) {\n        return [\n            {\n                metric: {\n                    job: \"sophia-dashboard\",\n                    instance: \"localhost:3000\"\n                },\n                value: [\n                    now,\n                    \"1\"\n                ]\n            },\n            {\n                metric: {\n                    job: \"sophia-agents\",\n                    instance: \"localhost:5001\"\n                },\n                value: [\n                    now,\n                    \"1\"\n                ]\n            },\n            {\n                metric: {\n                    job: \"mcp-context\",\n                    instance: \"localhost:3002\"\n                },\n                value: [\n                    now,\n                    \"1\"\n                ]\n            },\n            {\n                metric: {\n                    job: \"prometheus\",\n                    instance: \"localhost:9090\"\n                },\n                value: [\n                    now,\n                    \"0\"\n                ]\n            }\n        ];\n    }\n    if (query.includes(\"http_requests_total\")) {\n        return [\n            {\n                metric: {\n                    method: \"GET\",\n                    status: \"200\",\n                    endpoint: \"/api/chat\"\n                },\n                value: [\n                    now,\n                    \"1543\"\n                ]\n            },\n            {\n                metric: {\n                    method: \"POST\",\n                    status: \"200\",\n                    endpoint: \"/api/chat\"\n                },\n                value: [\n                    now,\n                    \"892\"\n                ]\n            },\n            {\n                metric: {\n                    method: \"GET\",\n                    status: \"200\",\n                    endpoint: \"/api/health\"\n                },\n                value: [\n                    now,\n                    \"3421\"\n                ]\n            },\n            {\n                metric: {\n                    method: \"GET\",\n                    status: \"404\",\n                    endpoint: \"/api/unknown\"\n                },\n                value: [\n                    now,\n                    \"23\"\n                ]\n            }\n        ];\n    }\n    if (query.includes(\"swarm_tasks_total\")) {\n        return [\n            {\n                metric: {\n                    swarm_type: \"research\",\n                    status: \"completed\"\n                },\n                value: [\n                    now,\n                    \"45\"\n                ]\n            },\n            {\n                metric: {\n                    swarm_type: \"planning\",\n                    status: \"completed\"\n                },\n                value: [\n                    now,\n                    \"38\"\n                ]\n            },\n            {\n                metric: {\n                    swarm_type: \"coding\",\n                    status: \"completed\"\n                },\n                value: [\n                    now,\n                    \"52\"\n                ]\n            },\n            {\n                metric: {\n                    swarm_type: \"research\",\n                    status: \"failed\"\n                },\n                value: [\n                    now,\n                    \"3\"\n                ]\n            }\n        ];\n    }\n    if (query.includes(\"llm_tokens_used_total\")) {\n        return [\n            {\n                metric: {\n                    model: \"claude-3-sonnet\",\n                    provider: \"anthropic\"\n                },\n                value: [\n                    now,\n                    \"285943\"\n                ]\n            },\n            {\n                metric: {\n                    model: \"gpt-4\",\n                    provider: \"openai\"\n                },\n                value: [\n                    now,\n                    \"194832\"\n                ]\n            },\n            {\n                metric: {\n                    model: \"mixtral-8x7b\",\n                    provider: \"together\"\n                },\n                value: [\n                    now,\n                    \"423891\"\n                ]\n            }\n        ];\n    }\n    if (query.includes(\"process_resident_memory_bytes\")) {\n        return [\n            {\n                metric: {\n                    job: \"sophia-dashboard\"\n                },\n                value: [\n                    now,\n                    \"134217728\"\n                ]\n            },\n            {\n                metric: {\n                    job: \"sophia-agents\"\n                },\n                value: [\n                    now,\n                    \"268435456\"\n                ]\n            },\n            {\n                metric: {\n                    job: \"mcp-context\"\n                },\n                value: [\n                    now,\n                    \"201326592\"\n                ]\n            }\n        ];\n    }\n    // Default fallback\n    return [\n        {\n            metric: {\n                service: \"sophia\",\n                type: \"default\"\n            },\n            value: [\n                now,\n                Math.random() * 100 + \"\"\n            ]\n        }\n    ];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/metrics/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmetrics%2Froute&page=%2Fapi%2Fmetrics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmetrics%2Froute.ts&appDir=%2FUsers%2Flynnmusil%2Fsophia-ai-intel-1%2Fapps%2Fsophia-dashboard%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Flynnmusil%2Fsophia-ai-intel-1%2Fapps%2Fsophia-dashboard&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();