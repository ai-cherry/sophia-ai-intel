# Optimized Python ML Base Image
FROM python:3.11-slim AS ml-base

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libffi-dev \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Pre-install heavy ML dependencies
COPY platform/common/ml-base-requirements.txt /tmp/
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r /tmp/ml-base-requirements.txt

# Multi-stage build template
FROM ml-base AS builder
WORKDIR /app
ARG SERVICE_NAME
COPY services-consolidated/${SERVICE_NAME}/requirements.txt .
RUN pip wheel --no-cache-dir -w /wheels -r requirements.txt

FROM ml-base AS runtime
WORKDIR /app
ARG SERVICE_NAME
RUN adduser --disabled-password --gecos '' appuser

# Copy wheels and install
COPY --from=builder /wheels /wheels
COPY services-consolidated/${SERVICE_NAME}/requirements.txt .
RUN pip install --no-deps --find-links /wheels -r requirements.txt

# Copy application
COPY services-consolidated/${SERVICE_NAME}/ ./
COPY platform/common/ ./platform/common/
COPY libs/ ./libs/
COPY agentic/ ./agentic/

RUN chown -R appuser:appuser /app
USER appuser

HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

EXPOSE 8000
CMD ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8000"]