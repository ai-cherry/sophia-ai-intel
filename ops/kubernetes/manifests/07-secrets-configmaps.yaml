# Sophia AI Intel - Comprehensive Secrets & Configuration
# All service configuration and secrets for Lambda Labs Kubernetes deployment

# =============================================================================
# SECRETS (Base64 encoded values - replace with actual secrets)
# =============================================================================

# Agent Swarm Secrets
apiVersion: v1
kind: Secret
metadata:
  name: sophia-agents-secrets
  namespace: sophia-ai
type: Opaque
data:
  # OpenAI for embeddings and LLM routing
  OPENAI_API_KEY: "base64_encoded_openai_key"
  ANTHROPIC_API_KEY: "base64_encoded_anthropic_key"
  
  # GitHub App for repository access
  GITHUB_APP_ID: "base64_encoded_app_id"
  GITHUB_INSTALLATION_ID: "base64_encoded_installation_id"  
  GITHUB_PRIVATE_KEY: "base64_encoded_private_key"
  
  # Database and storage
  NEON_DATABASE_URL: "base64_encoded_neon_url"
  QDRANT_API_KEY: "base64_encoded_qdrant_key"
  REDIS_PASSWORD: "base64_encoded_redis_password"
  
  # LLM routing
  PORTKEY_API_KEY: "base64_encoded_portkey_key"

---
# Context Service Secrets  
apiVersion: v1
kind: Secret
metadata:
  name: sophia-context-secrets
  namespace: sophia-ai
type: Opaque
data:
  # OpenAI for real embeddings
  OPENAI_API_KEY: "base64_encoded_openai_key"
  
  # Database connections
  NEON_DATABASE_URL: "base64_encoded_neon_url"
  QDRANT_API_KEY: "base64_encoded_qdrant_key"
  REDIS_PASSWORD: "base64_encoded_redis_password"

---
# Research Service Secrets
apiVersion: v1
kind: Secret
metadata:
  name: sophia-research-secrets
  namespace: sophia-ai
type: Opaque
data:
  # Research API providers
  SERPAPI_API_KEY: "base64_encoded_serpapi_key"
  PERPLEXITY_API_KEY: "base64_encoded_perplexity_key"
  TOGETHER_API_KEY: "base64_encoded_together_key"
  ANTHROPIC_API_KEY: "base64_encoded_anthropic_key"
  VOYAGE_API_KEY: "base64_encoded_voyage_key"
  COHERE_API_KEY: "base64_encoded_cohere_key"
  
  # Database and caching
  NEON_DATABASE_URL: "base64_encoded_neon_url"
  REDIS_PASSWORD: "base64_encoded_redis_password"

---
# Business Intelligence Secrets
apiVersion: v1
kind: Secret
metadata:
  name: sophia-business-secrets
  namespace: sophia-ai
type: Opaque
data:
  # CRM and business integrations
  APOLLO_API_KEY: "base64_encoded_apollo_key"
  HUBSPOT_ACCESS_TOKEN: "base64_encoded_hubspot_token"
  
  # Salesforce OAuth
  SALESFORCE_CLIENT_ID: "base64_encoded_sf_client_id"
  SALESFORCE_CLIENT_SECRET: "base64_encoded_sf_client_secret"
  SALESFORCE_USERNAME: "base64_encoded_sf_username"
  SALESFORCE_PASSWORD: "base64_encoded_sf_password"
  SALESFORCE_SECURITY_TOKEN: "base64_encoded_sf_token"
  
  # Communication platforms
  SLACK_BOT_TOKEN: "base64_encoded_slack_token"
  SLACK_SIGNING_SECRET: "base64_encoded_slack_secret"
  TELEGRAM_BOT_TOKEN: "base64_encoded_telegram_token"
  TELEGRAM_CHAT_ID: "base64_encoded_telegram_chat"
  
  # Call intelligence
  GONG_ACCESS_KEY: "base64_encoded_gong_key"
  GONG_ACCESS_KEY_SECRET: "base64_encoded_gong_secret"
  
  # Database
  NEON_DATABASE_URL: "base64_encoded_neon_url"
  REDIS_PASSWORD: "base64_encoded_redis_password"

---
# GitHub Service Secrets
apiVersion: v1
kind: Secret
metadata:
  name: sophia-github-secrets
  namespace: sophia-ai
type: Opaque
data:
  # GitHub App authentication
  GITHUB_APP_ID: "base64_encoded_app_id"
  GITHUB_INSTALLATION_ID: "base64_encoded_installation_id"
  GITHUB_PRIVATE_KEY: "base64_encoded_private_key"
  
  # Database
  NEON_DATABASE_URL: "base64_encoded_neon_url"

---
# Dashboard Secrets
apiVersion: v1
kind: Secret
metadata:
  name: sophia-dashboard-secrets
  namespace: sophia-ai
type: Opaque
data:
  # Analytics and monitoring (optional)
  ANALYTICS_KEY: "base64_encoded_analytics_key"
  
  # Session management
  SESSION_SECRET: "base64_encoded_session_secret"

---
# Redis Authentication Secret
apiVersion: v1
kind: Secret
metadata:
  name: redis-auth
  namespace: sophia-ai
type: Opaque
data:
  REDIS_PASSWORD: "base64_encoded_redis_password"
  REDIS_SENTINEL_PASSWORD: "base64_encoded_sentinel_password"

# =============================================================================
# CONFIGMAPS (Environment configuration for all services)
# =============================================================================

# Agent Swarm Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: sophia-agents-config
  namespace: sophia-ai
data:
  # Service configuration
  SERVICE_NAME: "sophia-agents"
  DASHBOARD_ORIGIN: "https://www.sophia-intel.ai"
  LOG_LEVEL: "INFO"
  
  # Agent swarm configuration
  MAX_CONCURRENT_WORKFLOWS: "10"
  DEFAULT_TIMEOUT_SECONDS: "1800"
  ENABLE_HUMAN_APPROVAL: "true"
  EMBEDDING_MODEL: "all-mpnet-base-v2"
  
  # LLM model configuration
  LLM_CUTTING_EDGE: "gpt-4o"
  LLM_CONSERVATIVE: "claude-3.5-sonnet"
  LLM_SYNTHESIS: "gpt-4o"
  LLM_REPOSITORY: "gpt-4o"
  LLM_DEFAULT: "gpt-4o"
  
  # Internal service URLs (Kubernetes DNS)
  GITHUB_MCP_URL: "http://sophia-github.sophia-ai.svc.cluster.local:8083"
  CONTEXT_MCP_URL: "http://sophia-context.sophia-ai.svc.cluster.local:8082"
  RESEARCH_MCP_URL: "http://sophia-research.sophia-ai.svc.cluster.local:8081"
  BUSINESS_MCP_URL: "http://sophia-business.sophia-ai.svc.cluster.local:8084"
  
  # Redis configuration
  REDIS_URL: "redis://redis.sophia-ai.svc.cluster.local:6379"
  REDIS_SENTINEL_URL: "redis-sentinel.sophia-ai.svc.cluster.local:26379"
  
  # Performance settings
  WORKER_PROCESSES: "4"
  MAX_WORKERS: "8"
  CACHE_TTL_HOURS: "24"

---
# Context Service Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: sophia-context-config
  namespace: sophia-ai
data:
  # Service configuration
  SERVICE_NAME: "sophia-context"  
  LOG_LEVEL: "INFO"
  
  # Embedding configuration
  EMBEDDING_MODEL: "text-embedding-3-large"
  EMBEDDING_DIMENSION: "3072"
  BATCH_SIZE: "32"
  MAX_CHUNK_TOKENS: "8000"
  
  # Vector database
  QDRANT_ENDPOINT: "http://qdrant.sophia-ai.svc.cluster.local:6333"
  COLLECTION_NAME: "sophia_code_intelligence"
  
  # Cache configuration
  CACHE_TTL_HOURS: "24"
  REDIS_URL: "redis://redis.sophia-ai.svc.cluster.local:6379"
  
  # Performance settings
  CONNECTION_POOL_SIZE: "20"
  MAX_CONCURRENT_REQUESTS: "100"

---
# Research Service Configuration  
apiVersion: v1
kind: ConfigMap
metadata:
  name: sophia-research-config
  namespace: sophia-ai
data:
  # Service configuration
  SERVICE_NAME: "sophia-research"
  LOG_LEVEL: "INFO"
  
  # Research providers
  DEFAULT_PROVIDERS: "serpapi,perplexity"
  MAX_RESULTS_PER_QUERY: "20"
  RESEARCH_TIMEOUT_SECONDS: "300"
  
  # Cache configuration
  CACHE_ENABLED: "true"
  CACHE_DEFAULT_TTL: "3600"     # 1 hour
  CACHE_LONG_TTL: "86400"       # 24 hours
  CACHE_SHORT_TTL: "300"        # 5 minutes
  CACHE_WARMING_ENABLED: "true"
  CACHE_OPTIMIZATION_INTERVAL: "3600"
  
  # Performance settings
  CONCURRENT_REQUESTS: "10"
  BATCH_SIZE: "5"
  RATE_LIMIT_PER_MINUTE: "100"
  
  # Redis configuration
  REDIS_URL: "redis://redis.sophia-ai.svc.cluster.local:6379"

---
# Business Intelligence Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: sophia-business-config
  namespace: sophia-ai
data:
  # Service configuration
  SERVICE_NAME: "sophia-business"
  LOG_LEVEL: "INFO"
  
  # CRM configuration
  HUBSPOT_ENABLED: "true"
  SALESFORCE_ENABLED: "true"
  APOLLO_ENABLED: "true"
  
  # Communication platforms
  SLACK_ENABLED: "true"
  TELEGRAM_ENABLED: "true"
  
  # Call intelligence
  GONG_ENABLED: "true"
  GONG_BASE_URL: "https://api.gong.io"
  
  # Performance settings
  MAX_CONCURRENT_REQUESTS: "50"
  REQUEST_TIMEOUT_SECONDS: "30"
  
  # Redis configuration
  REDIS_URL: "redis://redis.sophia-ai.svc.cluster.local:6379"
  
  # Database configuration
  CONNECTION_POOL_SIZE: "10"

---
# GitHub Service Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: sophia-github-config
  namespace: sophia-ai
data:
  # Service configuration
  SERVICE_NAME: "sophia-github"
  LOG_LEVEL: "INFO"
  
  # GitHub configuration
  GITHUB_REPO: "ai-cherry/sophia-ai-intel"
  DASHBOARD_ORIGIN: "https://www.sophia-intel.ai"
  
  # Performance settings
  MAX_CONCURRENT_REQUESTS: "20"
  REQUEST_TIMEOUT_SECONDS: "30"
  CACHE_TTL_MINUTES: "60"

---
# Dashboard Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: sophia-dashboard-config
  namespace: sophia-ai
data:
  # React app build configuration
  NODE_ENV: "production"
  VITE_APP_TITLE: "Sophia AI Intel"
  VITE_APP_VERSION: "2.0.0"
  VITE_ENVIRONMENT: "production"
  
  # API endpoints (external URLs for browser)
  VITE_API_BASE_URL: "https://www.sophia-intel.ai/api"
  VITE_WS_BASE_URL: "wss://www.sophia-intel.ai/ws"
  
  # Service endpoints
  VITE_AGENTS_API_URL: "https://www.sophia-intel.ai/api/agents"
  VITE_CONTEXT_API_URL: "https://www.sophia-intel.ai/api/context"  
  VITE_RESEARCH_API_URL: "https://www.sophia-intel.ai/api/research"
  VITE_BUSINESS_API_URL: "https://www.sophia-intel.ai/api/business"
  VITE_GITHUB_API_URL: "https://www.sophia-intel.ai/api/github"
  
  # Feature flags
  VITE_AGENT_SWARM_ENABLED: "true"
  VITE_REAL_TIME_UPDATES: "true"
  VITE_GPU_ACCELERATION: "true"
  VITE_ADVANCED_CACHING: "true"
  VITE_SEMANTIC_SEARCH: "true"
  VITE_MULTI_AGENT_PLANNING: "true"
  
  # UI configuration
  VITE_THEME: "default"
  VITE_PERSONA_CONTROLS: "true"
  VITE_AGENT_MONITORING: "true"
  VITE_REAL_TIME_CHAT: "true"
  VITE_CONTEXT_VISUALIZATION: "true"
  
  # Performance settings
  VITE_CACHE_STATIC_ASSETS: "true"
  VITE_ENABLE_SERVICE_WORKER: "true"
  VITE_LAZY_LOADING: "true"
  VITE_OPTIMIZATION_MODE: "production"

---
# Storage Classes for Lambda Labs
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: sophia-gpu-nvme
  labels:
    app.kubernetes.io/name: sophia-ai-storage
provisioner: kubernetes.io/no-provisioner  # Local storage provisioner
parameters:
  type: "nvme"
  fsType: "ext4"
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Delete

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: sophia-distributed
  labels:
    app.kubernetes.io/name: sophia-ai-storage
provisioner: driver.longhorn.io
parameters:
  numberOfReplicas: "3"
  staleReplicaTimeout: "2880"  # 48 hours
  fromBackup: ""
  dataLocality: "best-effort"
allowVolumeExpansion: true
reclaimPolicy: Retain

---
# Resource Quotas for namespace
apiVersion: v1
kind: ResourceQuota
metadata:
  name: sophia-ai-quota
  namespace: sophia-ai
spec:
  hard:
    # Compute resources
    requests.cpu: "20"
    requests.memory: 80Gi
    requests.nvidia.com/gpu: "10"
    limits.cpu: "40"  
    limits.memory: 160Gi
    limits.nvidia.com/gpu: "10"
    
    # Storage resources
    persistentvolumeclaims: "20"
    requests.storage: 1Ti
    
    # Object counts
    pods: "50"
    services: "20"
    secrets: "20"
    configmaps: "20"

---
# Limit Range for pods
apiVersion: v1
kind: LimitRange
metadata:
  name: sophia-ai-limits
  namespace: sophia-ai
spec:
  limits:
  - type: Container
    default:
      cpu: 1000m
      memory: 2Gi
    defaultRequest:
      cpu: 100m
      memory: 256Mi
    max:
      cpu: 8000m
      memory: 32Gi
      nvidia.com/gpu: "2"
    min:
      cpu: 50m
      memory: 128Mi

---
# Service Monitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: sophia-ai-services
  namespace: sophia-ai
  labels:
    app: sophia-ai-intel
spec:
  selector:
    matchLabels:
      component: ai-orchestration
  endpoints:
  - port: metrics
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s

---
# Pod Disruption Budget for Agent Swarm
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: sophia-agents-pdb
  namespace: sophia-ai
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: sophia-agents

---
# Pod Disruption Budget for Context Service  
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: sophia-context-pdb
  namespace: sophia-ai
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: sophia-context

---
# Pod Disruption Budget for Dashboard
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: sophia-dashboard-pdb
  namespace: sophia-ai
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: sophia-dashboard

---
# Priority Classes for workload prioritization
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: sophia-gpu-critical
value: 1000
globalDefault: false
description: "Critical GPU workloads (Agent Swarm)"

---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: sophia-high-priority
value: 800
globalDefault: false
description: "High priority services (Context, Research)"

---
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: sophia-standard-priority
value: 600
globalDefault: false
description: "Standard services (Dashboard, Business, GitHub)"
