# Simplified Pulumi ESC Environment: MCP Platform Production
# Unified secrets management - single source of truth from GitHub Actions
# Removes complex dual-secret rotation to eliminate conflicts

imports: []

values:
  # =============================================================================
  # CORE INFRASTRUCTURE SECRETS (From GitHub Actions)
  # =============================================================================
  fly:
    api_token:
      fn::secret: ${FLY_ORG_API}  # Matches your actual GitHub secret name
    org: pay-ready
    
  github:
    pat_token:
      fn::secret: ${GITHUB_PAT}   # Matches your actual GitHub secret name
    app_id:
      fn::secret: ${GITHUB_APP_ID}
    installation_id:
      fn::secret: ${GITHUB_INSTALLATION_ID}
    private_key:
      fn::secret: ${GITHUB_APP_PRIVATE_KEY}
    
  # =============================================================================
  # DATABASE AND STORAGE
  # =============================================================================
  neon:
    database_url:
      fn::secret: ${NEON_DATABASE_URL}
    api_token:
      fn::secret: ${NEON_API_TOKEN}
    
  redis:
    # Construct Redis URL from individual components (matches your setup)
    api_key:
      fn::secret: ${REDIS_API_KEY}
    endpoint:
      fn::secret: ${REDIS_DATABASE_ENDPOINT}  
    account_key:
      fn::secret: ${REDIS_ACCOUNT_KEY}
    # Constructed URL format: redis://:API_KEY@ENDPOINT:6379
    
  # =============================================================================
  # LLM PROVIDER CREDENTIALS
  # =============================================================================
  openai:
    api_key:
      fn::secret: ${OPENAI_API_KEY}
    
  anthropic:
    api_key:
      fn::secret: ${ANTHROPIC_API_KEY}
    
  portkey:
    api_key:
      fn::secret: ${PORTKEY_API_KEY}
    
  openrouter:
    api_key:
      fn::secret: ${OPENROUTER_API_KEY}
    
  # =============================================================================
  # RESEARCH AND SEARCH APIs
  # =============================================================================
  tavily:
    api_key:
      fn::secret: ${TAVILY_API_KEY}
    
  serper:
    api_key:
      fn::secret: ${SERPER_API_KEY}
    
  perplexity:
    api_key:
      fn::secret: ${PERPLEXITY_API_KEY}
    
  exa:
    api_key:
      fn::secret: ${EXA_API_KEY}
    
  # =============================================================================
  # LAMBDA LABS GPU COMPUTE
  # =============================================================================
  lambda:
    api_key:
      fn::secret: ${LAMBDA_API_KEY}
    private_ssh_key:
      fn::secret: ${LAMBDA_PRIVATE_SSH_KEY}
    public_ssh_key:
      fn::secret: ${LAMBDA_PUBLIC_SSH_KEY}
    
  # =============================================================================
  # BUSINESS INTEGRATION SECRETS (For future use)
  # =============================================================================
  hubspot:
    access_token:
      fn::secret: ${HUBSPOT_ACCESS_TOKEN}
    
  slack:
    bot_token:
      fn::secret: ${SLACK_BOT_TOKEN}
    signing_secret:
      fn::secret: ${SLACK_SIGNING_SECRET}
    
  # =============================================================================
  # DEPLOYMENT CONFIGURATION
  # =============================================================================
  deployment:
    environment: production
    tenant: pay-ready
    org: pay-ready
    regions:
      primary: ord
      secondary: [iad, sjc]
      
  # =============================================================================
  # SERVICE-SPECIFIC ENVIRONMENT MAPPING
  # =============================================================================
  services:
    dashboard:
      NODE_ENV: production
      TENANT: ${deployment.tenant}
      
    mcp_research:
      TAVILY_API_KEY: ${tavily.api_key}
      SERPER_API_KEY: ${serper.api_key}
      PERPLEXITY_API_KEY: ${perplexity.api_key}
      EXA_API_KEY: ${exa.api_key}
      PORTKEY_API_KEY: ${portkey.api_key}
      OPENROUTER_API_KEY: ${openrouter.api_key}
      TENANT: ${deployment.tenant}
      
    mcp_context:
      NEON_DATABASE_URL: ${neon.database_url}
      TENANT: ${deployment.tenant}
      
    mcp_business:
      HUBSPOT_ACCESS_TOKEN: ${hubspot.access_token}
      SLACK_BOT_TOKEN: ${slack.bot_token}
      SLACK_SIGNING_SECRET: ${slack.signing_secret}
      NEON_DATABASE_URL: ${neon.database_url}
      TENANT: ${deployment.tenant}
      
    mcp_github:
      GITHUB_APP_ID: ${github.app_id}
      GITHUB_INSTALLATION_ID: ${github.installation_id}  
      GITHUB_PRIVATE_KEY: ${github.private_key}
      TENANT: ${deployment.tenant}
      
    mcp_lambda:
      LAMBDA_API_KEY: ${lambda.api_key}
      LAMBDA_PRIVATE_SSH_KEY: ${lambda.private_ssh_key}
      LAMBDA_PUBLIC_SSH_KEY: ${lambda.public_ssh_key}
      NEON_DATABASE_URL: ${neon.database_url}
      TENANT: ${deployment.tenant}

# Export environment variables for CI/CD (simplified)
environmentVariables:
  # Core infrastructure
  FLY_API_TOKEN: ${fly.api_token}
  GITHUB_PAT_TOKEN: ${github.pat_token}
  
  # Database and storage
  NEON_DATABASE_URL: ${neon.database_url}
  NEON_API_TOKEN: ${neon.api_token}
  
  # Redis components (to be constructed into URL)
  REDIS_API_KEY: ${redis.api_key}
  REDIS_DATABASE_ENDPOINT: ${redis.endpoint}
  REDIS_ACCOUNT_KEY: ${redis.account_key}
  
  # LLM providers
  OPENAI_API_KEY: ${openai.api_key}
  ANTHROPIC_API_KEY: ${anthropic.api_key}
  PORTKEY_API_KEY: ${portkey.api_key}
  OPENROUTER_API_KEY: ${openrouter.api_key}
  
  # Research APIs
  TAVILY_API_KEY: ${tavily.api_key}
  SERPER_API_KEY: ${serper.api_key}
  PERPLEXITY_API_KEY: ${perplexity.api_key}
  EXA_API_KEY: ${exa.api_key}
  
  # Lambda Labs
  LAMBDA_API_KEY: ${lambda.api_key}
  LAMBDA_PRIVATE_SSH_KEY: ${lambda.private_ssh_key}
  LAMBDA_PUBLIC_SSH_KEY: ${lambda.public_ssh_key}
  
  # Business integrations
  HUBSPOT_ACCESS_TOKEN: ${hubspot.access_token}
  SLACK_BOT_TOKEN: ${slack.bot_token}
  SLACK_SIGNING_SECRET: ${slack.signing_secret}
  
  # GitHub App
  GITHUB_APP_ID: ${github.app_id}
  GITHUB_INSTALLATION_ID: ${github.installation_id}
  GITHUB_PRIVATE_KEY: ${github.private_key}
  
  # Deployment config
  TENANT: ${deployment.tenant}
  ENVIRONMENT: ${deployment.environment}
