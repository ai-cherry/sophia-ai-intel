# Pulumi ESC Environment: MCP Platform Production
# Comprehensive secrets management with dual-secret rotation capabilities
# Addresses authentication failures identified in deployment analysis

imports:
  - github-secrets-base

values:
  # =============================================================================
  # CORE INFRASTRUCTURE - DUAL SECRET ROTATION
  # =============================================================================
  fly:
    # Primary and backup API tokens for zero-downtime rotation
    api_token:
      fn::secret: ${fly.api_token_primary}
    api_token_backup:
      fn::secret: ${fly.api_token_secondary}
    current_active: primary  # Toggle between primary/secondary
    
  github:
    # Primary and backup PAT tokens with enhanced permissions
    pat_token:
      fn::secret: ${github.pat_token_primary}
    pat_token_backup:
      fn::secret: ${github.pat_token_secondary}
    current_active: primary
    # Required scopes: workflow, contents, actions, packages
    
  # =============================================================================
  # DATABASE CREDENTIALS - ZERO DOWNTIME ROTATION
  # =============================================================================
  neon:
    database_url:
      fn::secret: ${neon.database_url_primary}
    database_url_backup:
      fn::secret: ${neon.database_url_secondary}
    api_token:
      fn::secret: ${neon.api_token}
    current_active: primary
    # Connection pooling ensures smooth rotation
    
  redis:
    url:
      fn::secret: ${redis.url_primary}
    url_backup:
      fn::secret: ${redis.url_secondary}
    password:
      fn::secret: ${redis.password_primary}
    current_active: primary
    
  qdrant:
    api_key:
      fn::secret: ${qdrant.api_key_primary}
    api_key_backup:
      fn::secret: ${qdrant.api_key_secondary}
    url: ${qdrant.cluster_url}
    current_active: primary
    
  # =============================================================================
  # LLM PROVIDER CREDENTIALS
  # =============================================================================
  openai:
    api_key:
      fn::secret: ${openai.api_key_primary}
    api_key_backup:
      fn::secret: ${openai.api_key_secondary}
    current_active: primary
    
  anthropic:
    api_key:
      fn::secret: ${anthropic.api_key_primary}
    api_key_backup:
      fn::secret: ${anthropic.api_key_secondary}
    current_active: primary
    
  portkey:
    api_key:
      fn::secret: ${portkey.api_key}
    config_id: ${portkey.config_id}
    
  openrouter:
    api_key:
      fn::secret: ${openrouter.api_key_primary}
    api_key_backup:
      fn::secret: ${openrouter.api_key_secondary}
    current_active: primary
    
  # =============================================================================
  # BUSINESS INTEGRATION SECRETS
  # =============================================================================
  hubspot:
    access_token:
      fn::secret: ${hubspot.access_token_primary}
    access_token_backup:
      fn::secret: ${hubspot.access_token_secondary}
    client_secret:
      fn::secret: ${hubspot.client_secret}
    current_active: primary
    
  slack:
    bot_token:
      fn::secret: ${slack.bot_token_primary}
    bot_token_backup:
      fn::secret: ${slack.bot_token_secondary}
    signing_secret:
      fn::secret: ${slack.signing_secret}
    current_active: primary
    
  notion:
    api_key:
      fn::secret: ${notion.api_key_primary}
    api_key_backup:
      fn::secret: ${notion.api_key_secondary}
    current_active: primary
    
  # =============================================================================
  # SEARCH AND RESEARCH API CREDENTIALS
  # =============================================================================
  tavily:
    api_key:
      fn::secret: ${tavily.api_key_primary}
    api_key_backup:
      fn::secret: ${tavily.api_key_secondary}
    current_active: primary
    
  serper:
    api_key:
      fn::secret: ${serper.api_key}
    
  exa:
    api_key:
      fn::secret: ${exa.api_key}
    
  perplexity:
    api_key:
      fn::secret: ${perplexity.api_key}
    
  # =============================================================================
  # MCP SERVICE INTER-AUTHENTICATION
  # =============================================================================
  mcp:
    service_auth_key:
      fn::secret: ${mcp.service_auth_primary}
    service_auth_backup:
      fn::secret: ${mcp.service_auth_secondary}
    current_active: primary
    jwt_secret:
      fn::secret: ${mcp.jwt_secret}
    token_expiry: 3600  # 1 hour
    
  # =============================================================================
  # LAMBDA LABS GPU COMPUTE
  # =============================================================================
  lambda:
    api_key:
      fn::secret: ${lambda.api_key_primary}
    api_key_backup:
      fn::secret: ${lambda.api_key_secondary}
    endpoint: https://cloud.lambdalabs.com/api/v1
    ssh_private_key:
      fn::secret: ${lambda.ssh_private_key}
    ssh_public_key:
      fn::secret: ${lambda.ssh_public_key}
    current_active: primary
    
  # =============================================================================
  # AUTOMATED ROTATION CONFIGURATION
  # =============================================================================
  rotation:
    enabled: true
    schedule: "0 2 * * 0"  # Weekly Sunday 2 AM UTC
    dual_key_overlap_hours: 24
    notification:
      slack_webhook:
        fn::secret: ${rotation.slack_webhook}
      email_recipients:
        - ops@pay-ready.com
        - security@pay-ready.com
    services_to_restart:
      - sophiaai-mcp-context-v2
      - sophiaai-mcp-research-v2
      - sophiaai-mcp-business-v2
      - sophiaai-mcp-github-v2
      - sophiaai-mcp-lambda-v2
      - sophiaai-dashboard-v2
      - sophiaai-jobs-v2
      
  # =============================================================================
  # AUDIT AND COMPLIANCE
  # =============================================================================
  audit:
    enabled: true
    log_level: INFO
    retention_days: 90
    webhook_url:
      fn::secret: ${audit.webhook_url}
    events_tracked:
      - secret_rotation
      - service_restart
      - authentication_failure
      - deployment_failure
      - unauthorized_access
    compliance_standards:
      - SOC2
      - ISO27001
      - GDPR
      
  # =============================================================================
  # DEPLOYMENT ENVIRONMENT CONFIGURATION
  # =============================================================================
  deployment:
    environment: production
    tenant: pay-ready
    regions:
      primary: ord
      secondary: [iad, sjc, ams]
    health_check:
      enabled: true
      timeout: 30s
      interval: 15s
      retries: 3
    auto_rollback: true
    
  # =============================================================================
  # SERVICE-SPECIFIC ENVIRONMENT INJECTION
  # =============================================================================
  services:
    mcp_context:
      DATABASE_URL: ${fn::select_active:neon.database_url:neon.database_url_backup:neon.current_active}
      REDIS_URL: ${fn::select_active:redis.url:redis.url_backup:redis.current_active}
      MCP_SERVICE_AUTH: ${fn::select_active:mcp.service_auth_key:mcp.service_auth_backup:mcp.current_active}
      TENANT: ${deployment.tenant}
      ENVIRONMENT: ${deployment.environment}
      
    mcp_research:
      TAVILY_API_KEY: ${fn::select_active:tavily.api_key:tavily.api_key_backup:tavily.current_active}
      SERPER_API_KEY: ${serper.api_key}
      EXA_API_KEY: ${exa.api_key}
      PERPLEXITY_API_KEY: ${perplexity.api_key}
      DATABASE_URL: ${fn::select_active:neon.database_url:neon.database_url_backup:neon.current_active}
      MCP_SERVICE_AUTH: ${fn::select_active:mcp.service_auth_key:mcp.service_auth_backup:mcp.current_active}
      TENANT: ${deployment.tenant}
      
    mcp_business:
      HUBSPOT_ACCESS_TOKEN: ${fn::select_active:hubspot.access_token:hubspot.access_token_backup:hubspot.current_active}
      SLACK_BOT_TOKEN: ${fn::select_active:slack.bot_token:slack.bot_token_backup:slack.current_active}
      NOTION_API_KEY: ${fn::select_active:notion.api_key:notion.api_key_backup:notion.current_active}
      DATABASE_URL: ${fn::select_active:neon.database_url:neon.database_url_backup:neon.current_active}
      MCP_SERVICE_AUTH: ${fn::select_active:mcp.service_auth_key:mcp.service_auth_backup:mcp.current_active}
      TENANT: ${deployment.tenant}
      
    mcp_github:
      GITHUB_TOKEN: ${fn::select_active:github.pat_token:github.pat_token_backup:github.current_active}
      DATABASE_URL: ${fn::select_active:neon.database_url:neon.database_url_backup:neon.current_active}
      MCP_SERVICE_AUTH: ${fn::select_active:mcp.service_auth_key:mcp.service_auth_backup:mcp.current_active}
      TENANT: ${deployment.tenant}
      
    mcp_lambda:
      LAMBDA_API_KEY: ${fn::select_active:lambda.api_key:lambda.api_key_backup:lambda.current_active}
      LAMBDA_ENDPOINT: ${lambda.endpoint}
      LAMBDA_SSH_PRIVATE_KEY: ${lambda.ssh_private_key}
      DATABASE_URL: ${fn::select_active:neon.database_url:neon.database_url_backup:neon.current_active}
      MCP_SERVICE_AUTH: ${fn::select_active:mcp.service_auth_key:mcp.service_auth_backup:mcp.current_active}
      TENANT: ${deployment.tenant}
      
    dashboard:
      NODE_ENV: production
      TENANT: ${deployment.tenant}
      DATABASE_URL: ${fn::select_active:neon.database_url:neon.database_url_backup:neon.current_active}
      
    orchestrator:
      OPENAI_API_KEY: ${fn::select_active:openai.api_key:openai.api_key_backup:openai.current_active}
      ANTHROPIC_API_KEY: ${fn::select_active:anthropic.api_key:anthropic.api_key_backup:anthropic.current_active}
      PORTKEY_API_KEY: ${portkey.api_key}
      OPENROUTER_API_KEY: ${fn::select_active:openrouter.api_key:openrouter.api_key_backup:openrouter.current_active}
      REDIS_URL: ${fn::select_active:redis.url:redis.url_backup:redis.current_active}
      QDRANT_API_KEY: ${fn::select_active:qdrant.api_key:qdrant.api_key_backup:qdrant.current_active}
      QDRANT_URL: ${qdrant.url}
      DATABASE_URL: ${fn::select_active:neon.database_url:neon.database_url_backup:neon.current_active}
      MCP_SERVICE_AUTH: ${fn::select_active:mcp.service_auth_key:mcp.service_auth_backup:mcp.current_active}
      TENANT: ${deployment.tenant}

# Export all required environment variables for CI/CD
environmentVariables:
  # Core infrastructure
  FLY_API_TOKEN: ${fn::select_active:fly.api_token:fly.api_token_backup:fly.current_active}
  GH_PAT_TOKEN: ${fn::select_active:github.pat_token:github.pat_token_backup:github.current_active}
  
  # Database connections
  NEON_DATABASE_URL: ${fn::select_active:neon.database_url:neon.database_url_backup:neon.current_active}
  REDIS_URL: ${fn::select_active:redis.url:redis.url_backup:redis.current_active}
  QDRANT_API_KEY: ${fn::select_active:qdrant.api_key:qdrant.api_key_backup:qdrant.current_active}
  QDRANT_URL: ${qdrant.url}
  
  # LLM providers
  OPENAI_API_KEY: ${fn::select_active:openai.api_key:openai.api_key_backup:openai.current_active}
  ANTHROPIC_API_KEY: ${fn::select_active:anthropic.api_key:anthropic.api_key_backup:anthropic.current_active}
  PORTKEY_API_KEY: ${portkey.api_key}
  OPENROUTER_API_KEY: ${fn::select_active:openrouter.api_key:openrouter.api_key_backup:openrouter.current_active}
  
  # Business integrations
  HUBSPOT_ACCESS_TOKEN: ${fn::select_active:hubspot.access_token:hubspot.access_token_backup:hubspot.current_active}
  SLACK_BOT_TOKEN: ${fn::select_active:slack.bot_token:slack.bot_token_backup:slack.current_active}
  NOTION_API_KEY: ${fn::select_active:notion.api_key:notion.api_key_backup:notion.current_active}
  
  # Research APIs
  TAVILY_API_KEY: ${fn::select_active:tavily.api_key:tavily.api_key_backup:tavily.current_active}
  SERPER_API_KEY: ${serper.api_key}
  EXA_API_KEY: ${exa.api_key}
  PERPLEXITY_API_KEY: ${perplexity.api_key}
  
  # Lambda Labs
  LAMBDA_API_KEY: ${fn::select_active:lambda.api_key:lambda.api_key_backup:lambda.current_active}
  LAMBDA_ENDPOINT: ${lambda.endpoint}
  
  # MCP service authentication
  MCP_SERVICE_AUTH: ${fn::select_active:mcp.service_auth_key:mcp.service_auth_backup:mcp.current_active}
  
  # Deployment configuration
  TENANT: ${deployment.tenant}
  ENVIRONMENT: ${deployment.environment}
  AUDIT_ENABLED: ${audit.enabled}
  ROTATION_ENABLED: ${rotation.enabled}